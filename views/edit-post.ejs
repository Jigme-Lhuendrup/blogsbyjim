<%- contentFor('body') %>
<div class="container mx-auto px-4 py-8 max-w-2xl">
    <div class="bg-white rounded-lg shadow-lg p-8" style="background-color: rgba(255, 255, 255, 0.9);">
        <div class="flex justify-between items-center mb-8">
            <h2 class="text-2xl font-special-elite">Edit Post</h2>
            <form id="deleteForm" action="/posts/<%= post.id %>?_method=DELETE" method="POST" class="inline">
                <button type="button" id="deleteButton" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                    <i class="fas fa-trash-alt mr-2"></i>Delete Post
                </button>
            </form>
        </div>

        <% if (typeof error !== 'undefined' && error) { %>
        <div class="mb-8 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <span class="block sm:inline"><%= error %></span>
        </div>
        <% } %>

        <form id="editPostForm" action="/posts/<%= post.id %>?_method=PUT" method="POST" enctype="multipart/form-data" class="space-y-6">
            <div class="space-y-2">
                <label for="title" class="block text-gray-700 font-medium">Title</label>
                <input type="text" id="title" name="title" 
                    value="<%= post.title %>"
                    required
                    class="w-full px-4 py-3 text-lg border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
            </div>
            
            <div class="space-y-2">
                <label for="content" class="block text-gray-700 font-medium">Content</label>
                <textarea id="content" name="content" rows="6" 
                    required
                    class="w-full px-4 py-3 text-lg border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"><%= post.content %></textarea>
            </div>

            <% if (post.image_url) { %>
            <div class="space-y-2">
                <label class="block text-gray-700 font-medium">Current Image</label>
                <div class="w-48 h-32 overflow-hidden rounded-lg">
                    <img src="<%= post.image_url %>" alt="Current post image" class="w-full h-full object-cover">
                </div>
            </div>
            <% } %>

            <div class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
                <input type="file" id="imageInput" name="image" accept="image/*" class="hidden">
                <div id="dropArea" class="cursor-pointer space-y-4" onclick="document.getElementById('imageInput').click()">
                    <i class="fas fa-image text-5xl text-gray-400"></i>
                    <div>
                        <p class="text-lg text-gray-600 font-medium">Click to update image</p>
                        <p class="text-sm text-gray-500">or drag and drop your new image here</p>
                    </div>
                </div>
                <div id="imagePreview" class="mt-6 hidden">
                    <div class="w-48 h-32 overflow-hidden rounded-lg mx-auto">
                        <img src="" alt="Preview" class="w-full h-full object-cover">
                    </div>
                    <button type="button" data-action="remove-image" class="mt-4 text-red-500 hover:text-red-700">
                        <i class="fas fa-times mr-2"></i>Remove New Image
                    </button>
                </div>
            </div>

            <div class="flex justify-end space-x-4 pt-4">
                <a href="/home" 
                    class="px-8 py-3 border-2 border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors font-medium">
                    Cancel
                </a>
                <button type="submit"
                    class="px-8 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors font-medium">
                    Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

<%- contentFor('scripts') %>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Delete post functionality
        const deleteButton = document.getElementById('deleteButton');
        deleteButton.addEventListener('click', function() {
            if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
                document.getElementById('deleteForm').submit();
            }
        });

        // Image upload functionality
        const dropArea = document.getElementById('dropArea');
        const imageInput = document.getElementById('imageInput');
        const imagePreview = document.getElementById('imagePreview');
        const previewImg = imagePreview.querySelector('img');
        const removeImageButton = document.querySelector('[data-action="remove-image"]');

        // Drag and drop events
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropArea.classList.add('bg-gray-100');
        }

        function unhighlight() {
            dropArea.classList.remove('bg-gray-100');
        }

        // Handle file drop
        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            imageInput.files = files;
            handleFiles(files);
        }

        // Handle file input change
        imageInput.addEventListener('change', function() {
            handleFiles(this.files);
        });

        function handleFiles(files) {
            if (files.length > 0) {
                const file = files[0];
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        previewImg.src = e.target.result;
                        imagePreview.classList.remove('hidden');
                        dropArea.classList.add('hidden');
                    }
                    reader.readAsDataURL(file);
                }
            }
        }

        // Handle image removal
        if (removeImageButton) {
            removeImageButton.addEventListener('click', function() {
                imageInput.value = '';
                imagePreview.classList.add('hidden');
                dropArea.classList.remove('hidden');
            });
        }
    });
</script> 